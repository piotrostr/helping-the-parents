import cv2
import torch


def mark_fixations(model_output, scene_path, out_path):
    with open(model_output, 'rb') as f:
        model_output = torch.load(f, map_location='cpu')
    cap = cv2.VideoCapture(scene_path)
    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    fps = cap.get(cv2.CAP_PROP_FPS)
    out_vid = cv2.VideoWriter(out_path, fourcc, float(fps), (1920, 1080))
    frames = []
    for i in range(len(model_output['PoG_px_final'])):
        ret, frame = cap.read()
        if not ret:
            break
        cv2.resize(frame, (1920, 1080))
        frames.append(frame)
    for frame, (x, y) in zip(frames, model_output['PoG_px_final']):
        coords = (int(x), int(y))
        frame = cv2.circle(frame, coords, 15, (255, 255, 255), thickness=2)
        out_vid.write(frame)
    out_vid.release()
    cap.release()


def mark_fixations_points(fixations, scene_path, out_path):
    cap = cv2.VideoCapture(scene_path)
    fourcc = cv2.VideoWriter_fourcc(*'mp4v')
    fps = cap.get(cv2.CAP_PROP_FPS)
    out_vid = cv2.VideoWriter(out_path, fourcc, fps, (1920, 1080))
    frames = []
    for i in range(len(fixations)):
        ret, frame = cap.read()
        frame = cv2.resize(frame, (1920, 1080))
        if not ret:
            break
        frames.append(frame)
    for frame, (x, y) in zip(frames, fixations):
        coords = (int(x), int(y))
        frame = cv2.circle(frame, coords, 15, (255, 255, 255), thickness=2)
        out_vid.write(frame)
    out_vid.release()
    cap.release()
    print(f'Written {out_path}.')

    
if __name__ == '__main__':
    # mark_fixations('./out.pkl', './data/scene.mp4', './data/scene_out.mp4')
    fixations = [
        [1760.3104, 1076.8223],
        [1759.0564, 1077.7715],
        [1758.2321, 1076.9174],
        [1757.6008, 1076.0312],
        [1757.2159, 1075.4250],
        [1756.8137, 1074.8060],
        [1756.4819, 1074.3154],
        [1756.2882, 1073.8884],
        [1756.0994, 1073.4095],
        [1755.8433, 1072.8248],
        [1755.7572, 1072.4216],
        [1755.6699, 1072.0897],
        [1759.1143, 1076.2172],
        [1759.1987, 1076.2279],
        [1759.3893, 1076.0509],
        [1759.4205, 1076.0922],
        [1759.5717, 1076.0977],
        [1759.6616, 1076.1263],
        [1759.7054, 1076.1981],
        [1759.7872, 1076.2258],
        [1759.8357, 1076.3208],
        [1759.8964, 1076.3585],
        [1759.9065, 1076.4756],
        [1759.9225, 1076.5685],
        [1801.4785, 1039.8590],
        [1804.5181, 1038.9535],
        [1806.0240, 1038.8806],
        [1807.7268, 1038.2982],
        [1808.3945, 1037.3107],
        [1809.7817, 1038.1658],
        [1806.4641, 1039.2831],
        [1806.1750, 1039.8840],
        [1806.6351, 1040.0695],
        [1807.1254, 1040.1434],
        [1813.5740, 1036.9637],
        [1815.7148, 1035.9089],
        [1816.8044, 1035.8260],
        [1816.9578, 1035.9349],
        [1817.3380, 1035.6985],
        [1817.6974, 1035.5071],
        [1818.2130, 1035.3134],
        [1817.8591, 1036.8391],
        [1805.4485, 1041.2671],
        [1807.2816, 1040.1392],
        [1807.8804, 1039.9938],
        [1808.5918, 1039.6755],
        [1818.6150, 1035.0850],
        [1822.1121, 1034.2874],
        [1820.2415, 1035.4298],
        [1820.2247, 1035.2900],
        [1820.8191, 1035.3545],
        [1821.0649, 1035.2925],
        [1821.4705, 1035.2025],
        [1821.8887, 1035.0511],
        [1822.2821, 1034.9467],
        [1818.3448, 1035.7854],
        [1818.7979, 1035.4502],
        [1818.3744, 1035.5778],
        [1818.7556, 1035.3940],
        [1818.9053, 1035.3689],
        [1819.4384, 1035.2269],
        [1819.2300, 1035.4106],
        [1819.2451, 1035.4550],
        [1819.3776, 1035.6042],
        [1819.3451, 1035.7288],
        [1819.3600, 1035.8090],
        [1823.2085, 1035.0962],
        [1824.5195, 1033.8787],
        [1822.6990, 1034.8402],
        [1822.7979, 1034.8331],
        [1822.8342, 1034.8873],
        [1823.3544, 1034.6803],
        [1823.5778, 1034.6483],
        [1822.6282, 1035.8379],
        [1822.6864, 1035.3270],
        [1822.3470, 1035.4752],
        [1822.3624, 1035.5789],
        [1822.0194, 1035.5460],
        [1821.9667, 1035.6610],
        [1821.9004, 1035.7616],
        [1820.2378, 1035.2589],
        [1820.2709, 1036.5938],
        [1821.2803, 1036.8949],
        [1823.2855, 1033.3868],
        [1829.3372, 1034.6003],
        [1829.2661, 1034.9524],
        [1828.7738, 1035.2198],
        [1828.4453, 1035.3934],
        [1828.9919, 1034.8511],
        [1827.5913, 1035.2742],
        [1826.5408, 1035.6626],
        [1826.3806, 1035.7966],
        [1812.6276, 1043.5375],
        [1817.0808, 1038.4451],
        [1810.4233, 1045.2856],
        [1807.4574, 1047.0819],
        [1800.4657, 1052.0074],
        [1797.9492, 1053.7849],
        [1800.3328, 1051.9917],
        [1786.6249, 1059.1552],
        [1819.0992, 1038.9237],
        [1816.6215, 1041.3380],
        [1779.6127, 1063.5479],
        [1777.4966, 1065.5508],
        [1776.8737, 1065.6757],
        [1789.9736, 1057.8246],
        [1790.6536, 1058.3136],
        [1780.9771, 1064.4648],
        [1784.8695, 1060.8823],
        [1781.8313, 1062.4724],
        [1781.7164, 1062.8497],
        [1781.2856, 1063.1145],
        [1780.9594, 1063.4553],
        [1782.5312, 1062.0165],
        [1783.2958, 1061.4905],
        [1783.2435, 1061.5592],
        [1784.9584, 1060.5219],
        [1795.3005, 1054.7686],
        [1797.7195, 1052.2263],
        [1790.2557, 1057.5791],
        [1797.6500, 1052.9259],
        [1801.9530, 1049.6134],
        [1796.2930, 1053.0984],
        [1804.9725, 1048.5760],
        [1811.1681, 1043.6738],
        [1811.6764, 1043.1802],
        [1812.3307, 1042.6696],
        [1811.7208, 1043.1854],
        [1801.5629, 1051.3806],
        [1810.3951, 1043.3043],
        [1806.8322, 1045.4768],
        [1811.3138, 1043.4694],
        [1812.1814, 1043.2012],
        [1808.2061, 1047.0247],
        [1808.4608, 1046.8969],
        [1808.6930, 1046.7318],
        [1809.0688, 1046.6011],
        [1803.2483, 1049.9711],
        [1805.1710, 1048.7256],
        [1805.6572, 1048.3760],
        [1808.8403, 1045.5304],
        [1808.6562, 1045.8525],
        [1808.2495, 1046.2019],
        [1808.8621, 1045.8582],
        [1809.3577, 1045.5652],
        [1778.3633, 1067.2980],
        [1785.1008, 1064.7911],
        [1778.5277, 1069.7787],
        [1765.9763, 1075.9756],
        [1766.6198, 1076.4830]
    ]
    mark_fixations_points(fixations,
                          'data/scene.mp4',
                          'data/scene_out.mp4')

